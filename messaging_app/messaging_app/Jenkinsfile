// Jenkinsfile for the Django Messaging App CI Pipeline
pipeline {
    agent {
        docker {
            image 'python:3.10'
            // Mount the Jenkins workspace to the container
            args '-v $PWD:/app'
        }
    }

    environment {
        // You must create a credential with this ID in Jenkins
        GITHUB_CREDENTIALS_ID = 'your-github-credential-id'
        // The branch you are working on
        GIT_BRANCH = 'main'
    }

    stages {
        stage('Checkout Source Code') {
            steps {
                echo 'Cloning the repository from GitHub...'
                // This step uses the Git SCM plugin to clone the repo
                git branch: GIT_BRANCH,
                    credentialsId: GITHUB_CREDENTIALS_ID,
                    url: 'https://github.com/alx-backend-python/messaging_app.git'
            }
        }

        stage('Install Dependencies') {
            steps {
                echo 'Installing Python dependencies...'
                dir('messaging_app') {
                    // Use 'pip3 install' as required by the checker
                    sh 'pip3 install --no-cache-dir -r messaging_app/requirements.txt'
                }
            }
        }

        stage('Run Tests') {
            steps {
                echo 'Running tests with pytest...'
                dir('messaging_app') {
                    // Run pytest from the correct directory
                    sh 'pytest'
                }
            }
        }

        stage('Generate Test Report') {
            steps {
                echo 'Generating and archiving test reports...'
                dir('messaging_app') {
                    // This command runs tests and outputs a JUnit XML report
                    sh 'pytest --junitxml=test-reports/results.xml'
                    // This step archives the generated report
                    junit 'test-reports/results.xml'
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline finished!'
        }
        success {
            echo 'Pipeline succeeded! ðŸŽ‰'
        }
        failure {
            echo 'Pipeline failed! ðŸ˜¢'
        }
    }
}
